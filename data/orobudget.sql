-- MySQL Script generated by MySQL Workbench
-- 01/17/17 13:18:57
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema orobudget
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `orobudget` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `orobudget` ;

-- -----------------------------------------------------
-- Table `orobudget`.`budget`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`budget` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `budgethead` VARCHAR(200) NULL,
  `status` VARCHAR(200) NULL,
  `datecreated` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`unit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`unit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`month`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`month` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`budget_has_month`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`budget_has_month` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `budget_id` INT NOT NULL,
  `month_id` INT NOT NULL,
  PRIMARY KEY (`id`, `budget_id`, `month_id`),
  INDEX `fk_budget_has_month_month1_idx` (`month_id` ASC),
  INDEX `fk_budget_has_month_budget1_idx` (`budget_id` ASC),
  CONSTRAINT `fk_budget_has_month_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `orobudget`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_budget_has_month_month1`
    FOREIGN KEY (`month_id`)
    REFERENCES `orobudget`.`month` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`budget_has_unit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`budget_has_unit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `budget_id` INT NOT NULL,
  `unit_id` INT NOT NULL,
  PRIMARY KEY (`id`, `budget_id`, `unit_id`),
  INDEX `fk_budget_has_unit_unit1_idx` (`unit_id` ASC),
  INDEX `fk_budget_has_unit_budget1_idx` (`budget_id` ASC),
  CONSTRAINT `fk_budget_has_unit_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `orobudget`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_budget_has_unit_unit1`
    FOREIGN KEY (`unit_id`)
    REFERENCES `orobudget`.`unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`budget_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`budget_has_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `budget_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `budget_id`, `user_id`),
  INDEX `fk_budget_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_budget_has_user_budget1_idx` (`budget_id` ASC),
  CONSTRAINT `fk_budget_has_user_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `orobudget`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_budget_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `orobudget`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`timestamps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`timestamps` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);


-- -----------------------------------------------------
-- Table `orobudget`.`ledger`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`ledger` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `budget_id` INT NOT NULL,
  `fullname` VARCHAR(125) NULL,
  `description` VARCHAR(225) NULL,
  `debit` DOUBLE NULL,
  `credit` DOUBLE NULL,
  `datecreated` DATETIME NULL,
  PRIMARY KEY (`id`, `budget_id`),
  INDEX `fk_Income_budget1_idx` (`budget_id` ASC),
  CONSTRAINT `fk_Income_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `orobudget`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orobudget`.`ledger_has_month`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `orobudget`.`ledger_has_month` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ledger_id` INT NOT NULL,
  `ledger_budget_id` INT NOT NULL,
  `month_id` INT NOT NULL,
  PRIMARY KEY (`id`, `ledger_id`, `ledger_budget_id`, `month_id`),
  INDEX `fk_ledger_has_month_month1_idx` (`month_id` ASC),
  INDEX `fk_ledger_has_month_ledger1_idx` (`ledger_id` ASC, `ledger_budget_id` ASC),
  CONSTRAINT `fk_ledger_has_month_ledger1`
    FOREIGN KEY (`ledger_id` , `ledger_budget_id`)
    REFERENCES `orobudget`.`ledger` (`id` , `budget_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ledger_has_month_month1`
    FOREIGN KEY (`month_id`)
    REFERENCES `orobudget`.`month` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
